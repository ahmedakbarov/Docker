# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:


- task: Docker@2
  inputs:
    containerRegistry: 'REGcon'
    repository: 'ahmdepm'
    command: 'buildAndPush'
    Dockerfile: '**/dockerfile'
    tags: '$(Build.BuildId)'


- task: AzureCLI@2
  inputs:
    azureSubscription: 'Pay-As-You-Go-Research(ad599f39-d79e-4a58-b465-008cedcedd30)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group create -n $(RG) -l "west europe"
      az keyvault create -g $(RG) -n $(keyval)
      az keyvault secret set \
      --vault-name $(keyval) \
      --name $(regname)-pull-pwd \
      --value $(az ad sp create-for-rbac \
      --name http://$(regname)-pull \
      --scopes $(az acr show --name $(regname) --query id --output tsv) \
      --role acrpull \
      --query password \
      --output tsv)
      az keyvault secret set \
      --vault-name $(keyval) \
      --name $(regname)-pull-usr \
      --value $(az ad sp show --id http://$(regname)-pull --query appId --output tsv)
      ACR_LOGIN_SERVER=$(az acr show --name $(regname) --resource-group Contain --query "loginServer" --output tsv)
      az container create \
      --name container02 \
      -g $RG \
      --os-type Windows \
       --image $ACR_LOGIN_SERVER/ahmdepm:$(Build.BuildId) \
      --registry-login-server $ACR_LOGIN_SERVER \
      --registry-username $(az keyvault secret show --vault-name $keyval -n $regname-pull-usr --query value -o tsv) \
      --registry-password $(az keyvault secret show --vault-name $keyval -n $regname-pull-pwd --query value -o tsv) \
      --dns-name-label ahmdepm453453 \
      --query ipAddress.fqdn

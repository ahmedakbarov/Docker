# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:


- task: Docker@2
  inputs:
    containerRegistry: 'REG-Ahmdepm'
    repository: 'ahmdepm'
    command: 'buildAndPush'
    Dockerfile: '**/dockerfile'


- task: AzureCLI@2
  inputs:
    azureSubscription: 'ARMcon'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $RES_GROUP="$(RG)"
      $ACR_NAME="$(regname)"     
      $AKV_NAME="$(keyval)"
      
      az keyvault create -g $RES_GROUP -n $AKV_NAME
      az keyvault secret set `
        --vault-name $AKV_NAME `
        --name $ACR_NAME-pull-pwd `
        --value $(az ad sp create-for-rbac `
                      --name http://$ACR_NAME-pull `
                      --scopes $(az acr show --name $ACR_NAME --query id --output tsv) `
                      --role acrpull `
                      --query password `
                      --output tsv)
      az keyvault secret set `
          --vault-name $AKV_NAME `
          --name $ACR_NAME-pull-usr `
          --value $(az ad sp show --id http://$ACR_NAME-pull --query appId --output tsv)
      ACR_LOGIN_SERVER=$(az acr show --name $ACR_NAME --resource-group $RES_GROUP --query "loginServer" --output tsv)
      az container create `
          --name container02`
          --resource-group $RES_GROUP `
          --image $ACR_LOGIN_SERVER/ahmdepm:$(Build.BuildId) `
          --registry-login-server $ACR_LOGIN_SERVER `
          --registry-username $(az keyvault secret show --vault-name $AKV_NAME -n $ACR_NAME-pull-usr --query value -o tsv) `
          --registry-password $(az keyvault secret show --vault-name $AKV_NAME -n $ACR_NAME-pull-pwd --query value -o tsv) `
          --dns-name-label aci-demo-$RANDOM `
          --query ipAddress.fqdn